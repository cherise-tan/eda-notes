COMMAND LINE
rm -rf ALSO rmdir (remove folder)
rm file.txt (remove a file)
pushd (push directory)
popd (pop directory)
cp (copy a file/directory)
robocopy (robust copy)
mv (move a file/directory)
more (page through a file)
type (print a whole file)
cat document.txt (print out document contents in terminal)
dir -r (find files)
select-string (find things inside files)
echo (print some arguments)


GIT
git clone ... new_folder_name (clone repository and rename folder at the same time)
git add -A (add all files)
git status (checks repository status - which files are inside it, which changes still need to be committed, which branch you are currently working on)
git push --set-upstream origin branch_name (set upstream branch - will create if doesn't exist remotely)
git log (displays information about existing commits)
git log --oneline (displays most pertinent info on one line)
git log --stat (displays the files changed in the commit)
git log -p (displays the actual changes made to a file -> shortened from the flag --patch)
git log -p -w (hides whitespace changes -> e.g indents)
git show fdf5493 (displays info about the given commit - fdf5493)
git diff (displays what changes have been made but not yet committed)


BRANCH, PULL, MERGE
git branch (shows local branches)
git branch -a (shows local and remote branches)
git branch -m new_branch_name (renames the current branch)
git branch branch_name (creates new local branch)
git checkout branch_name (change to new local branch)
git checkout -b branch_name (creates and switches to new branch)
git merge branch_name (merges the branch_name branch into the master branch)
git branch -d branch_name (deletes branch)
git push origin --delete branch_name (deletes remote branch)

Creating remote branches
- git remote repo add remote_repo_name https://...... (Add remote repo to local repo config)
- git push remote_repo_name branch_name~ (pushes the branch to the new remote repo)


GITIGNORE AND GLOBBING
Globbing lets you use special characters to match patterns/characters
- blank lines for spacing
- # marks line as comments
- * matches 0+ characters
- ? matches 1 character
- [abc] matches a, b or c
- ** matches nested directories
--- 'a/**/z matches: a/z || a/b/z || a/b/c/z

Example: 'samples/*.jpg' would allow you to ignore all jpg images within the 'samples' folder


FORKING AND CLONING
The Forking Workflow requires 2 remotes: one for the official repository, one for your personal server-side repo
- Setting up the upstream remote allows you to keep your local repo up to date as the official project progresses

git pull upstream master (pulls down new changes from official project)
